@using Sandbox;
@using Sandbox.UI;
@using Sandbox.UI.Construct;
@using System;
@using System.Collections.Generic;
@using Facepunch.Forsaken;

@namespace Facepunch.Forsaken.UI
@attribute [StyleSheet( "/ui/TimedAction.scss" )]
@inherits Panel

@if ( Info is null ) return;

<root>
    <div @ref="Container" class="container">
        <div class="circle">
            <img class="icon" src=@Info.Icon</img>
            <div @ref="Fill" class="fill"></div>
        </div>
        <label class="title">@Info.Title</label>
    </div>
</root>

@code
{
    public Facepunch.Forsaken.TimedAction Info => ForsakenPlayer.Me?.TimedAction ?? default;
    public Panel Container { get; private set; }
    public Panel Fill { get; private set; }

    public void UpdatePosition()
    {
        var position = Info.Origin.ToScreen();
        if ( position.z < 0f ) return;

        position.x *= Screen.Size.x;
        position.x -= Container.Box.Rect.Width * 0.5f;

        position.y *= Screen.Size.y;
        position.y -= Container.Box.Rect.Height * 0.5f;

        Container.Style.Left = Length.Pixels( position.x * ScaleFromScreen );
        Container.Style.Top = Length.Pixels( position.y * ScaleFromScreen );
    }

    public override void Tick()
    {
        if ( Fill is null || Container is null )
            return;

        if ( Info is not null )
        {
            var fraction = Info.EndTime / Info.Duration;
            var size = 100f - (fraction * 100f);

            UpdatePosition();

            Fill.Style.Width = Length.Percent( size );
            Fill.Style.Height = Length.Percent( size );
        }

        base.Tick();
    }

    protected override int BuildHash()
    {
        return HashCode.Combine( Info );
    }
}
