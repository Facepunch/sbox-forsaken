@using System;
@using Sandbox;
@using Sandbox.UI;

@namespace Facepunch.Forsaken
@attribute [StyleSheet( "/ui/inventory/Hotbar.scss" )]
@inherits Panel

<root>

</root>

@code
{
    public static Hotbar Current { get; private set; }

    public InventoryContainer Container { get; private set; }
    public List<InventorySlot> Slots { get; private set; }

    public Hotbar()
    {
        Slots = new();
        Current = this;

        BindClass( "hidden", IsHidden );
    }

    public void SetContainer( InventoryContainer container )
    {
        Slots ??= new();
        Container = container;
        Slots.Clear();

        DeleteChildren( true );

        for ( ushort i = 0; i < container.SlotLimit; i++ )
        {
            var slot = AddChild<InventorySlot>();
            slot.SetDisplaySlot( i + 1 );
            slot.Container = container;
            slot.Slot = i;
            Slots.Add( slot );
        }
    }

    public override void Tick()
    {
        if ( Local.Pawn is Player player )
        {
            for ( ushort i = 0; i < Slots.Count; i++ )
            {
                var item = Container.GetFromSlot( i );

                Slots[i].SetItem( item );
                Slots[i].IsSelected = player.CurrentHotbarIndex == i;
            }
        }

        base.Tick();
    }

    protected override void OnAfterTreeRender( bool firstTime )
    {
        if ( Local.Pawn is not Player player )
            return;

        if ( player.HotbarInventory.IsValid() )
        {
            SetContainer( player.HotbarInventory.Instance );
        }
    }

    private bool IsHidden()
    {
        if ( Local.Pawn.LifeState == LifeState.Dead )
            return true;

        if ( IDialog.IsActive() )
            return true;

        return false;
    }
}
