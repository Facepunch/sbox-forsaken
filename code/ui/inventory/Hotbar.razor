@using System;
@using Sandbox;
@using Sandbox.UI;

@namespace Facepunch.Forsaken
@attribute [StyleSheet( "/ui/inventory/Hotbar.scss" )]
@inherits Panel

@if ( !Container.IsValid() ) return;

<root>
    @for ( ushort i = 0; i < Container.SlotLimit; i++ )
    {
        var item = Container.GetFromSlot( i );
        <InventorySlot IsSelected=@(GetHotbarIndex() == i) Container=@Container Slot=@i Item=@item></InventorySlot>
    }
</root>

@code
{
    public static Hotbar Current { get; private set; }

    public InventoryContainer Container { get; private set; }

    public Hotbar()
    {
        Current = this;
        BindClass( "hidden", IsHidden );
    }

    public void SetContainer( InventoryContainer container )
    {
        Container = container;
    }

    protected override void OnAfterTreeRender( bool firstTime )
    {
        if ( Local.Pawn is not Player player )
            return;

        if ( player.HotbarInventory.IsValid() )
        {
            SetContainer( player.HotbarInventory.Instance );
        }
    }

    protected override int BuildHash()
    {
        return HashCode.Combine( Container, GetHotbarIndex() );
    }

    private int GetHotbarIndex()
    {
        if ( Local.Pawn is Player player )
        {
            return player.CurrentHotbarIndex;
        }

        return 0;
    }

    private bool IsHidden()
    {
        if ( Local.Pawn.LifeState == LifeState.Dead )
            return true;

        if ( IDialog.IsActive() )
            return true;

        return false;
    }
}
